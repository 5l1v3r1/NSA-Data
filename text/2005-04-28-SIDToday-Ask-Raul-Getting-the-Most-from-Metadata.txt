DYNAMIC PAGE -- HIGHEST POSSIBLE CLASSIFICATION IS<br>TOP SECRET // SI / TK // REL TO USA AUS CAN GBR NZL<br><br>(U) Ask Raul: Getting the Most from Metadata<br>FROM: Raul<br>A DNI Analyst<br>Run Date: 04/28/2005<br><br>Dear Raul,<br>(C) I am swamped with metadata and things that look like<br>metadata. Can you think of something important and easy that I<br>should be able to use from all the metadata we generate which<br>would provide a quick and easy payoff?<br>Betsy<br>Dear Betsy,<br>(C) I feel your pain. To get directly to your question, let me<br>recommend the fields found in OLE (Object Linking and<br>Embedding) property sets for Microsoft Office products. What the<br>heck are you talking about?! Let me explain.<br>(U//FOUO) Ages ago (I'm looking at an article from 1994 on OLE 2<br>and I know I have a book at home from the 80's on OLE), Microsoft<br>began using OLE to make their products, especially documents,<br>spiffy. To save you a bunch of details, the basic idea behind OLE<br>was that each OLE document would take the form of a file system<br>and if you know what you are doing, you can read it. Here is an<br>example:<br>sample.xls:OK :Workbook : <br>Root = Start / Count = 006c / 1 <br>SBD = Start / Count = fffffffe / 0 <br>Size of BBD = 1 <br>BBD = 006b <br>OLE DIRECTORY <br>ID Name Type Start Size Prev Next Dir <br>0:Root Entry ROOT 0000 0 -1 -1 2 <br>1:Workbook FILE 0000 46112 -1 -1 -1 <br>2:eSummaryInformation FILE 005b 4096 1 3 -1 <br>3:eDocumentSummaryInformation FILE 0063 4096 -1 -1 -1<br>This is what a plain old Excel spreadsheet looks like, OLE-wise. This<br>structure is such that it makes it fairly straightforward to repair<br>some damaged documents. Don't get me going here! Just thinking<br>about it has me fit to be tied.<br>(S) The Root Entry tells us where everything is. The spreadsheet is<br>actually the Workbook section but of particular interest here are<br>the eSummaryInformation and eDocumentSummaryInformation<br>property sets. Inside these property sets is information you can<br>use to track your target such as the company name, author and<br>last author. Here is an example of a dump of a property set from a<br>document we collected:<br>OS: Win32 (Windows) Version 5.1 <br>Summary Information Property Set <br><br> SERIES: <br>(U) Ask Raul - Answers<br>to DNI Questions<br>1.  Ask Raul : Fonts and<br>Encoding<br>2.  Ask Raul : Dictionary<br>Equations<br>3.  Ask Raul : HTML<br>Coding and Email<br>4.  Ask Raul : PDF Files<br>5.  Ask Raul: Damaged<br>Data<br>6.  Ask Raul : Getting<br>the Most from<br>Metadata<br><br> </p>Codepage is 1256 Arabic <br>Title: No <br>Subject: Empty. No value. <br>Author: Masoud <br>Keywords: Empty. No value. <br>Comments: Empty. No value. <br>Template: Normal.dot <br>LastAuthor: Masoud <br>RevNumber: 8 <br>AppName: Microsoft Word 9.0 <br>EditTime: 20 Hrs 28 Min <br>Create_DTM: April 11, 2005 1246 hrs <br>LastSave_DTM: April 11, 2005 1453 hrs <br>PageCount: 1 <br>WordCount: 3450 <br>CharCount: 19670 <br>Security: 0 <br>Summary 1 <br>OS: Win32 (Windows) Version 5.1 <br>Document Summary Information Property Set <br>Codepage is 1256 Arabic <br>Company: IRISL <br>LineCount: 163 <br>ParCount: 39 <br>Invalid or Unknown Document Summary Property 17 value<br>is 24156 <br>Invalid or Unknown Document Summary Property 23 value<br>is 592544 <br>Scale: False <br>LinksDirty: False <br>Invalid or Unknown Document Summary Property 19 value<br>is False <br>Invalid or Unknown Document Summary Property 22 value<br>is False <br>DocParts: ... Error. No further processing. <br>Doc_Summary 1<br>Notice the Author's name: Masoud, Last Author: Masoud and<br>Company: IRISL. If you are still awake, you can probably guess<br>that this info could also be used to quickly link identical documents<br>from different sources together or as a means to validate the<br>integrity of documents as well as a whole host of other things.<br>(C) The two most commonly collected file types you will see these<br>property sets in are Word and Excel. They aren't the only file<br>types, but certainly the most common.<br>(S) Now the nice thing about this is that often, very often, our<br>targets fill in these values, or the machine does it for them, and<br>they never get changed. Are things getting clearer? If Joe Badguy<br>isn't paying attention, and he usually isn't, and you get an OLE<br>document from him, you can then target what he has in his<br>property sets or you can go look in Pinwale for additional<br>documents from him without having to know his email address,<br>domain or anything else. You can also become a DNI wizard and<br>guess at what might be in the property sets and have some fairly<br>good luck. In the example above, IRISL is the publicly known<br>abbreviation for the foreign company in question. We could have<br>guessed at this without having to have the first collection to<br>discover it. You can hunt, not fish.<br>(S) Now here's the nitty-gritty. The property sets use a specific<br><br> </p>format which is at least 15 years old now. Using the example<br>above, the Company name is actually stored as follows in the file:<br>0x1e 0x00 0x00 0x00 0x06 0x00 0x00 0x00 I R I S L 0x00<br>Here is what it means:<br>0x00 0x00 0x00 0x1e String (8-bit), null terminated <br>0x06 0x00 0x00 0x00 String length + null <br>String IRISL0x00<br>(The first two values are reversed because they are stored in the<br>file in Little Endian format.)<br>If we wanted, we could slap the above hex string into a dictionary<br>and suddenly we'd be hauling in Word and Excel documents from<br>IRISL without having to know who was sending it or to whom.<br>Additionally, we could take this term and convert it to base64 and<br>task that also. Like this:<br>AAAeAAAABgAAAElSSVNMAC8v <br>LwAAHgAAAAYAAABJUklTTAAvLy8v <br>Ly8AAB4AAAAGAAAASVJJU0wALy8A<br>Although this isn't perfect (again, don't get me going), it will work<br>just fine and keeps you from having to worry about what<br>equipment is or isn't at what site. It's that simple. The Unicode<br>version of the string type is not much different. Plus, lucky us,<br>what we do for the dictionary is easily adapted for Pinwale and vice<br>versa.<br>(S) Now, imagine this: You're sitting here digging through the<br>mess you've made with your traffic and lucky you, you find a Word<br>document with a value set for the company or author in the<br>property set. You then take that string and search through Pinwale<br>and discover that there were more documents lying there waiting<br>for you that you otherwise never would have found. You didn't have<br>the email addresses or other hard selectors but you had that Word<br>document and the property sets. Additionally, you now harvest<br>several new email addresses and other bits of EEI from the<br>sessions you found that help you to find even more goodies. Pretty<br>spiffy!<br>(S) Needless to say, if we harvested this data and used it properly,<br>it would also be a big help for DNI chaining. Let's say Joe Badguy,<br>whom we know about, sends a message with an OLE document in<br>it to Bill Badguy, whom we don't know about and unlucky us, we<br>don't collect this session. Three months later, Bill forwards that file<br>to Tom Badguy, again whom we don't know about but because he<br>is on a link we're watching, and because we had the value in the<br>property set tasked, we haul in the session and suddenly we know<br>about Bill and Tom and that they are associated with Joe. Not bad!<br>Some of us have actually been doing this. It works.<br>(C) There you go. In case you are wondering, corporately we've<br>had the ability to extract the data from property sets for about five<br>years. Also, other data types have similar bits of information that<br>can be exploited. Is that metadata being extracted? It pays to<br>know how your data works.<br>(U//FOUO) Enjoy! DNI is a lot easier than you think. Or at least it<br>can be.<br>Raul<br><br> </p>"(U//FOUO) SIDtoday articles may not be republished or reposted outside NSANet<br>without the consent of S0121 (DL sid_comms)."<br><br>DYNAMIC PAGE -- HIGHEST POSSIBLE CLASSIFICATION IS<br>TOP SECRET // SI / TK // REL TO USA AUS CAN GBR NZL<br>DERIVED FROM: NSA/CSSM 1-52, DATED 08 JAN 2007 DECLASSIFY ON: 20320108<br><br> </p>